image: humancellatlas/dss-build-box
# The Docker image `humancellatlas/dss-build-box` is created through a manual process from
# `${DSS_HOME}/allspark.Dockerfile`. See the contents of `${DSS_HOME}/allspark.Dockerfile`
# creation and usage instructions.

variables:
  GIT_SUBMODULE_STRATEGY: normal
  DSS_ES_TIMEOUT: 30
  DSS_UNITTEST_OPTS: "-v"
  GITHUB_API: "https://api.github.com"

stages:
  - deploy
  - fusillade
  - test

before_script:
  - date && date -u
# TODO: figure out how to get the gitlab-runner to not clone the repo as root - Brian H
  - cp -r /HumanCellAtlas/data-store ~/data-store && cd ~/data-store
  - git reset --hard HEAD
  - virtualenv ~/venv
  - source ~/venv/bin/activate
  - pip install -r requirements-dev.txt
  - source environment
  - source environment.prod
  - scripts/dss-ops.py secrets get application_secrets.json > application_secrets.json
  - scripts/dss-ops.py secrets get gcp-credentials.json > gcp-credentials.json
  - export GOOGLE_APPLICATION_CREDENTIALS=$(pwd -P)/gcp-credentials.json

setup_fusillade:
  stage: fusillade
  script:
    - git clone -b master https://github.com/HumanCellAtlas/dcp-fusillade.git
    - cd dcp-fusillade
# currently, there is no environment.prod in the dcp-fusillade repo
    - source environment # && source environment.prod
    - cd ..
    - source environment
    - if [[ -f "environment.$CI_COMMIT_REF_NAME" ]]; then
    -   source environment.$CI_COMMIT_REF_NAME
    - fi
    - cat ./roles.json | sed "s/\${stage}/${DSS_DEPLOYMENT_STAGE}/g" > temp-roles.json
    - FUS_STAGE=$DSS_DEPLOYMENT_STAGE
    - python -m json.tool ./temp-roles.json > /dev/null || exit 1
    - dcp-fusillade/scripts/setup_fusillade.py --file temp-roles.json --force $FUS_STAGE
    - scripts/check_fusillade.py $FUS_STAGE
  except:
    - schedules
  only:
    - prod

deploy:
  stage: deploy
  script:
    - make plan-infra
    - make deploy
    - scripts/set_version.sh
  environment:
    name: prod
    url: https://dss.data.humancellatlas.org
  only:
    - prod
  when: manual

test:
  stage: test
  script:
    - make smoketest-prod
  dependencies:
    - deploy
  only:
    - prod
